Author: Antony Xavier <antonyaxs324@gmail.com>
Homepage: <https://github.com/Antony-AXS/indicator.nvim>
License: MIT license

 ██╗███╗   ██╗██████╗ ██╗ ██████╗ █████╗ ████████╗ ██████╗ ██████╗      ███╗   ██╗██╗   ██╗██╗███╗   ███╗
 ██║████╗  ██║██╔══██╗██║██╔════╝██╔══██╗╚══██╔══╝██╔═══██╗██╔══██╗     ████╗  ██║██║   ██║██║████╗ ████║
 ██║██╔██╗ ██║██║  ██║██║██║     ███████║   ██║   ██║   ██║██████╔╝     ██╔██╗ ██║██║   ██║██║██╔████╔██║
 ██║██║╚██╗██║██║  ██║██║██║     ██╔══██║   ██║   ██║   ██║██╔══██╗     ██║╚██╗██║╚██╗ ██╔╝██║██║╚██╔╝██║
 ██║██║ ╚████║██████╔╝██║╚██████╗██║  ██║   ██║   ╚██████╔╝██║  ██║ ██╗ ██║ ╚████║ ╚████╔╝ ██║██║ ╚═╝ ██║
 ╚═╝╚═╝  ╚═══╝╚═════╝ ╚═╝ ╚═════╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝ ╚═╝ ╚═╝  ╚═══╝  ╚═══╝  ╚═╝╚═╝     ╚═╝
                                                                                  *indicator.nvim*
indicator.nvim.txt                      Plugin Documentation
=========================================================================================================

|INTRODUCTION|                                                                      indicator.nvim

Indicator.nvim is a lightweight plugin that displays window numbers on the screen, 
making it easy to navigate through windows in a tab.
It also highlights the window you jump into, enhancing your navigation experience.

=========================================================================================================

CONTENTS                                                                          *indicator_contents*

 Table of Contents:                                                  |indicator.nvim-table-of-contents|
 1. Commands ......................................................  |indicator.nvim-commands|
 2. Functions .....................................................  |indicator.nvim-functions|
 3. Configuration .................................................  |indicator.nvim-configuration|

=========================================================================================================

1. COMMANDS                                                                       *indicator_commands*

    1. |:Indicator|
           . This command is provided to 'activate' and 'deactivate' Indicator event.
           . Takes in only one argument.

           Argument(s):
             {arg} (string) : arg only takes two values {ON} and {OFF}

    2. |:IndicatorWinHl|
           . This command is provided to 'activate' and 'deactivate' Window Highlight event.
           . Takes in only one argument.

           Argument(s):
             {arg} (string) : arg only takes two values {ON} and {OFF}

=========================================================================================================

2. FUNCTIONS                                                                      *indicator_functions*

    |indicateCurrent|({timer})

     - This function indicates the window where the cursor is currently located.
     - It's done by displaying the window number at the top right corner of each window.
     - the function takes in an argument called timer to extend or shorten the display time.
     - timer argument should be a positive integer, representing the duration in seconds.
     - timer field is optional if not provided, the display time defaults to |1500| seconds.

     Parameters:
      . {timer} (integer|nil) : to set the indicator window lifetime in |seconds|

  ------------------------------------------------------------------------------------------------------

    |indicateAll|({timer})

     - This function indicates all the open windows in the current working tab.
     - It's done by displaying the window number at the top right corner of each window.
     - The function takes in an argument called timer to extend or shorten the display time.
     - timer argument should be a positive integer, representing the duration in seconds.
     - timer field is optional if not provided, the display time defaults to |1500| seconds.

     Parameters:
      . {timer} (integer|nil) : to set the indicator window lifetime in |seconds|

  ------------------------------------------------------------------------------------------------------

    |triggerWindowManager|({null})

     - This function mimics the built-in Neovim window management system.
     - 'jump', 'close', 'shift' and 'rotate' features are available.
     - Visually indicates the window |number| on top of each window in a tab.

     FEATURES ALAVILABLE:
      JUMP *(ACTION)*:
       . Use <*number* + |b|> to jump to the bottom-right window.
       . Use <*number* + |t|> to jump to the top-left window.
       . Use <*number* + |w|> to jump to the desired window.
       . Use < |p| > to jump to the previous window (like a toggle).

      SHIFT *(ACTION)*:
       . Use <*number* + |H|> to shift the desired window to the left end.
       . Use <*number* + |J|> to shift the desired window to the bottom.
       . Use <*number* + |K|> to shift the desired window to the top.
       . Use <*number* + |L|> to shift the desired window to the right end.

      CLOSE *(ACTION)*:
       . Use <*number* + |q|> to quit the desired window.
       . Use <*number* + |c|> to close the desired window.
       . Use <*number* + |o|> to close all windows expect the one you want to be open.

      ROTATE *(ACTION)*:
       . Use <*number* + |r|> to rotate all the windows in the current tab clockswise.
       . Use <*number* + |R|> to rotate all the windows in the current tab anticlockswise.

     NOTE: The *number* field is optional. If omitted, the action will be executed
     in the window where the cursor is currently located.

     Parameters:
      . {null} : not accepting any |parameters| as of now

=========================================================================================================

3. CONFIGURATION                                                                *indicator_configuration*

   lazy.nvim :
>lua
              {
                "Antony-AXS/indicator.nvim",
                event = "VeryLazy",
                dependencies = { "nvim-lua/plenary.nvim" },
                config = function()
                  local Indicator = require("indicator")
                  Indicator.setup({
                    indicator_event = true, -- turns ON the Indicator feature by default
                    window_highlight_event = false,-- turns OFF the Window Highlight feature by default
                  })
                end
              }
<
   packer.nvim :
>lua
         use {
               "Antony-AXS/indicator.nvim",
               event = "VimEnter",
               requires = { "nvim-lua/plenary.nvim" },
               config = function()
                 local Indicator = require("indicator")
                 Indicator.setup({
                   indicator_event = true, -- turns ON the Indicator feature by default
                   window_highlight_event = false,
                 })
               end
            }

---------------------------------------------------------------------------------------------------------
vim:tw=80:ts=2:ft=help:norl:syntax=help:autoindent:
